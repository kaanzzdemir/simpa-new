// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimPlastik.Models.Context;

#nullable disable

namespace SimPlastik.Migrations
{
    [DbContext(typeof(SimpaDbContext))]
    partial class SimpaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SimPlastik.Models.Entity.About", b =>
                {
                    b.Property<int>("about_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("about_id"), 1L, 1);

                    b.Property<string>("about_ar_text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("about_eng_text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("about_text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("about_title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("about_id");

                    b.ToTable("Abouts");
                });

            modelBuilder.Entity("SimPlastik.Models.Entity.Category", b =>
                {
                    b.Property<int>("category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("category_id"), 1L, 1);

                    b.Property<string>("category_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("category_name_ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("category_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("topCategorytop_category_id")
                        .HasColumnType("int");

                    b.Property<int>("top_category_id")
                        .HasColumnType("int");

                    b.HasKey("category_id");

                    b.HasIndex("topCategorytop_category_id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SimPlastik.Models.Entity.Contact", b =>
                {
                    b.Property<int>("contact_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("contact_id"), 1L, 1);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("other_number_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("other_number_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("other_number_3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("contact_id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("SimPlastik.Models.Entity.Products", b =>
                {
                    b.Property<int>("product_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("product_id"), 1L, 1);

                    b.Property<int>("category_id")
                        .HasColumnType("int");

                    b.Property<int>("category_id1")
                        .HasColumnType("int");

                    b.Property<string>("product_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_desc_ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_desc_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_img_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_img_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_img_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_img_4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_info_box_measurement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_info_box_weight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_info_piece")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_info_shipment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_info_shipment_ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_info_shipment_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_name_ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("product_id");

                    b.HasIndex("category_id1");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SimPlastik.Models.Entity.TopCategory", b =>
                {
                    b.Property<int>("top_category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("top_category_id"), 1L, 1);

                    b.Property<string>("top_category_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("top_category_name_ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("top_category_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("top_category_id");

                    b.ToTable("TopCategory");
                });

            modelBuilder.Entity("SimPlastik.Models.Entity.Users", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("user_id"), 1L, 1);

                    b.Property<bool>("is_admin")
                        .HasColumnType("bit");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SimPlastik.Models.Entity.Category", b =>
                {
                    b.HasOne("SimPlastik.Models.Entity.TopCategory", "topCategory")
                        .WithMany()
                        .HasForeignKey("topCategorytop_category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("topCategory");
                });

            modelBuilder.Entity("SimPlastik.Models.Entity.Products", b =>
                {
                    b.HasOne("SimPlastik.Models.Entity.Category", "category")
                        .WithMany()
                        .HasForeignKey("category_id1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });
#pragma warning restore 612, 618
        }
    }
}
